<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: technology | Ash's Blog]]></title>
  <link href="http://ashliu.github.com/blog/categories/technology/atom.xml" rel="self"/>
  <link href="http://ashliu.github.com/"/>
  <updated>2012-05-21T23:47:08+08:00</updated>
  <id>http://ashliu.github.com/</id>
  <author>
    <name><![CDATA[Ash]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[elua in fedora]]></title>
    <link href="http://ashliu.github.com/blog/2012/05/17/elua-in-fedora/"/>
    <updated>2012-05-17T00:49:00+08:00</updated>
    <id>http://ashliu.github.com/blog/2012/05/17/elua-in-fedora</id>
    <content type="html"><![CDATA[<p><blockquote><p>太晚了，先暂时记录下，不准备写的很详细。</p></blockquote></p>

<h3>elua编译环境</h3>

<p>这个很简单，参考官方的<a href="http://www.eluaproject.net/doc/v0.8/en_building.html">教程</a>即可。教程不是fedora的，但是都大同小异。toolchain使用的是官方推荐的版本，下载地址在<a href="https://sourcery.mentor.com/public/gnu_toolchain/arm-none-eabi/arm-2009q3-68-arm-none-eabi.bin">这里</a>。</p>

<p>扒拉扒拉下载安装完毕后，要记得把toolchain的路径加入到path环境变量。下载最新的elua源码，直接进入就可以使用scons编译了，我是lm3s8962的demo板子，所以直接使用
<code>
scons cpu=lm3s8962 prog
</code>
会生成两个文件，一个是elf格式的；另一个是bin档，用来直接写入flash，ok，我们需要的就是这个。</p>

<h3>jlink下载</h3>

<ul>
<li><p>首先是安装jlink驱动。上网一查，两中方式：其一使用openocd，我参考了好些人说的配置文件，始终有错误，果断放弃。其二是使用segger官方的linux驱动，在<a href="http://www.segger.com/cms/jlink-software.html?step=&amp;file=JLinkLinux_441g&amp;serial=">这里</a>，选择linux版本即可，其中他会要求你输入序列号，随便写几个数就可以了，别当真：）。 下载后，安装之。插上你的jlink然后运行start文件。</p></li>
<li><p>一切顺利的话，会进入jlink的shell，并有如下提示
```
SEGGER J-Link Commander V4.41g ('?' for help)
Compiled Jan 27 2012 19:11:22
DLL version V4.41g, compiled Jan 27 2012 19:11:21
Firmware: J-Link ARM V8 compiled Jan 12 2012 20:43:19
Hardware: V8.00
S/N: 20100214
Feature(s): RDI,FlashDL,FlashBP,JFlash,GDBFull
VTarget = 3.274V
Info: TotalIRLen = 4, IRPrint = 0x01
Info: Found Cortex-M3 r1p1, Little endian.
Info: TPIU fitted.
Info:   FPUnit: 6 code (BP) slots and 2 literal slots
Found 1 JTAG device, Total IRLen = 4:</p>

<h1>0 Id: 0x3BA00477, IRLen: 04, IRPrint: 0x1, CoreSight JTAG-DP (ARM)</h1>

<p>Cortex-M3 identified.
JTAG speed: 100 kHz
```</p></li>
<li>下载bin档。
<code>
h   --&gt; hold住cpu
exec device lm3s8962   --&gt; 选择cpu型号
loadbin bin/elua_lua_lm3s8962.bin 0x00  --&gt;下载bin档，0x00为flash的起始位置
r   --&gt; reset
g   --&gt; go
</code></li>
</ul>


<p><blockquote><p>另外记录一个还没解决的问题： 我的usb－> uart线(或者是驱动)貌似有点问题，用screen来terminal总是断断续续的，用minicom直接就没反应。待解决。</p></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于本octopress]]></title>
    <link href="http://ashliu.github.com/blog/2012/05/15/guan-yu-ben-octopress/"/>
    <updated>2012-05-15T22:32:00+08:00</updated>
    <id>http://ashliu.github.com/blog/2012/05/15/guan-yu-ben-octopress</id>
    <content type="html"><![CDATA[<p><blockquote><p>记录下本octopress的搭建过程，全当做备忘。</p></blockquote></p>

<h3>基本startup</h3>

<p>我的环境是fedora，所以是直接参考的官方文档，简单方便，见<a href="http://octopress.org/docs/setup/">这里</a>。如果是windows环境，那么请果断google吧，很多前人已经总结的很好了。</p>

<p>这里记录下我犯的一个错误：在按照教程step by step的过程中，我执行了如下命令：
<code>
git add .
git commit -m 'your message'
git push origin source
</code>
然后我写了post，并deploy到github，我以为我的源文件也一起被commit到了source分支，所以就没有再次执行上面的命令。结果是我在其他地方clone后发现根本就没有之前写的post！汗，所以写完post后，别忘记了执行上面的命令。</p>

<h3>插件</h3>

<ul>
<li><p>评论插件。我用的disqus，在<a href="disqus.com">disqus.com</a>注册账户，并设置好site，并得到唯一的短名字。然后在_config.yml中打开disqus_show_comment_count，并设置disqus_short_name为前面得到的短名字即可。</p></li>
<li><p>侧边栏最近评论。同样是使用的disqus，可以参考<a href="http://chen.yanping.me/cn/blog/2012/02/07/comment-sidebar/">这里</a></p></li>
<li><p>图片外链。这个我难得找，直接使用的国内的，<a href="http://tu.6.cn/">六间房</a>，蛮方便的，但是感觉速度一般。</p></li>
<li><p>分享。这个我使用的是<a href="http://www.jiathis.com/">加网</a>的服务，都不用注册，简单方便。</p></li>
<li><p>侧边栏标签。这个折腾了一会儿，想搞成中文的，但是没有成功，就放弃了，只用E文算了，反正我的标签也不多。</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
